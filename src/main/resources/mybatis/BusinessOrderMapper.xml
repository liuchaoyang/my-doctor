<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.doctor.mapper.BusinessOrderMapper" >
  <resultMap id="BaseResultMap" type="com.doctor.model.BusinessOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="pay" property="pay" jdbcType="DECIMAL" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="addr_province" property="addrProvince" jdbcType="VARCHAR" />
    <result column="addr_detail" property="addrDetail" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List" >
    o.id, o.product_id, o.user_id, o.count, o.pay, o.status, mobile, user_name, addr_province, addr_detail
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_business_order o
    where o.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="listByUserId" resultType="Map">
    select
    o.id, o.product_id as productId, o.user_id as userId, o.count, o.pay, o.status, o.addr_province as addrProvince, o.addr_detail as addrDetail,
    p.name as productName, p.summary, p.yprice, p.price, p.logo
    from tb_business_order o
    left join tb_product p on o.product_id = p.id
    where o.user_id = #{userId}
  </select>


  <select id="countByParams" resultType="Integer">
    SELECT COUNT(*)
    FROM tb_business_order
  </select>
  <select id="listByParams" resultType="Map">
    select
    o.id, o.product_id as productId, o.user_id as userId, u.name_, o.count, o.pay, o.status, o.addr_province as addrProvince, o.addr_detail as addrDetail,
    p.name as productName, p.summary, p.yprice, p.price, o.create_time, o.update_time
    from tb_business_order o
    left join tb_product p on o.product_id = p.id
    LEFT JOIN sys_user u on o.user_id = u.id
    <if test="start != null and end != null ">
      LIMIT #{start}, #{end}
    </if>
  </select>

  <insert id="insert" parameterType="com.doctor.model.BusinessOrder" keyProperty="id" useGeneratedKeys="true">
    insert into tb_business_order (id, product_id, user_id,mobile, user_name, addr_province, addr_detail,
      count, pay)
    values (#{id,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR} ,
    #{mobile,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
    #{addrProvince,jdbcType=VARCHAR}, #{addrDetail,jdbcType=VARCHAR},
      #{count,jdbcType=INTEGER}, #{pay,jdbcType=DECIMAL})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.doctor.model.BusinessOrder" >
    update tb_business_order
    <set >
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="pay != null" >
        pay = #{pay,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.doctor.model.BusinessOrder" >
    update tb_business_order
    set product_id = #{productId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      pay = #{pay,jdbcType=DECIMAL},
      status = #{status,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>