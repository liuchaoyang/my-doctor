<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.doctor.mapper.UserScoreMapper" >
  <resultMap id="BaseResultMap" type="com.doctor.model.UserScore" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="ref_user_id" property="refUserId" jdbcType="VARCHAR" />
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="origin" property="origin" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, ref_user_id, pay_amount, score, origin, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_score
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="listForRecommend" resultType="Map">
    SELECT
    r.name as userName, s.pay_amount as payAmount, s.create_time as createTime, s.score
    FROM tb_score s
    LEFT JOIN tb_recommend_newer r ON r.id = s.ref_user_id
    WHERE s.user_id = #{userId}
    AND s.origin = 0
  </select>

  <select id="recommendCount" resultType="Map">
    SELECT
    count(*) as num,sum(s.score) as score
    FROM tb_score s
    WHERE s.user_id = #{userId}
    AND s.origin = 0
  </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_score
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.doctor.model.UserScore" >
    insert into tb_score (id, user_id, ref_user_id, 
      pay_amount, score, origin, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{refUserId,jdbcType=VARCHAR}, 
      #{payAmount,jdbcType=DECIMAL}, #{score,jdbcType=INTEGER}, #{origin,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.doctor.model.UserScore" >
    insert into tb_score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="refUserId != null" >
        ref_user_id,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="origin != null" >
        origin,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="refUserId != null" >
        #{refUserId,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="origin != null" >
        #{origin,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.doctor.model.UserScore" >
    update tb_score
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="refUserId != null" >
        ref_user_id = #{refUserId,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="origin != null" >
        origin = #{origin,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.doctor.model.UserScore" >
    update tb_score
    set user_id = #{userId,jdbcType=VARCHAR},
      ref_user_id = #{refUserId,jdbcType=VARCHAR},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      score = #{score,jdbcType=INTEGER},
      origin = #{origin,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>